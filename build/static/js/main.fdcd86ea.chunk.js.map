{"version":3,"sources":["reportWebVitals.js","index.js","Utils/InsertCellBelow.js","App.js","Components/HeaderComponent.js","Components/FooterComponent.js","Utils/InsertCellAbove.js","Utils/MoveCellDown.js","Utils/MoveCellUp.js","Utils/DeleteCell.js","Utils/generateHash.js","Components/CellPlot.js","Components/CellComponent.js","Utils/OpenFile.js","Components/FileExplorer.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","_jsx","React","StrictMode","children","App","InsertCellBelow","props","cellContext","cellindex_value","cellIndex","output","editorsValue","rows","plotly_input","this_component","setState","prevState","newCellContextData","_toConsumableArray","cellContext_data","active_cell_index","force","splice","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","handleEditorChange","newValue","cellindex","split","length","run","plotly_output","global","show","data","push","show_graph","layout","loadLibrary","libraryUrl","script","createElement","src","async","addEventListener","console","log","concat","head","appendChild","d3","Plotly","code","state","hasMultipleLinesOrStatements","filter","line","trim","hasShowGraphCall","test","replace","warn","eval","error","toString","evalCode","_assertThisInitialized","handleKeyDown","e","ctrlKey","keyCode","preventDefault","shiftKey","changeActiveCellIndex","InsertCellBelowHandler","InsertCellAboveHandler","InsertCellAbove","MoveCellDownHandler","MoveCellDown","MoveCellUpHandler","MoveCellUp","DeleteCellHandler","DeleteCell","handleAddFolder","newFolder","folders","handleFolderClick","folder","currentFolder","notebookNameChangeHandler","notebook_name","target","value","handleSaveClick","stateToSave","blob","Blob","JSON","stringify","type","saveAs","handleDownloadHTML","clonedElement","documentElement","cloneNode","querySelectorAll","forEach","element","remove","html","outerHTML","handleClearOutput","arguments","undefined","map","item","index","_jsxs","className","HeaderComponent","notebookHash","FileExplorer","notebook_hash","fileInputRef","id","CellComponent","FooterComponent","createRef","queryParams","URLSearchParams","window","location","search","get","stateData","notebook_data","generateHash","localStorage","getItem","parse","run_all","bind","_createClass","key","setItem","this","_unused","nextProps","nextState","Component","_Fragment","Navbar","bg","expand","sticky","Container","Brand","href","alt","width","height","onChange","Toggle","Collapse","Nav","NavDropdown","title","Item","onClick","open","FontAwesomeIcon","icon","faPlus","faArrowUp","faArrowDown","faPlay","faRemove","print","Link","faHeart","style","index1","index2","crypto","randomBytes","CellPlot","_Component","plotRef","_this$props","Plot","newPlot","current","_this$props2","_this2","Button","variant","ref","display","faStepForward","CodeEditor","onValueChange","highlight","Prism","languages","javascript","onKeyDown","padding","fontFamily","fontSize","flex","Alert","dir","outputString","err","message","Object","keys","OpenFile","fileReader","FileReader","onload","event","fileContents","result","stateFromFile","readAsText","this_state","selectedFile","handleFileSelect","files","handleOpenClick","click","accept"],"mappings":"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","file":"static/js/main.fdcd86ea.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n{/* The following line can be included in your src/index.js or App.js file */}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const InsertCellBelow = (props)=>{\n\n    const cellIndex =  props.cellIndex ;\n    const cellContext = {\n        cellindex_value: cellIndex+1,\n        output : [],\n        editorsValue : '',\n        rows : 5,\n        plotly_input : {}\n      };\n\n    props.this_component.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        let active_cell_index = prevState.active_cell_index ;\n\n        if (typeof newCellContextData[active_cell_index+1] === \"undefined\" || props.force === true ) { // if next cell not available than add empty\n          newCellContextData.splice(active_cell_index+1, 0, cellContext); //add output array also\n         active_cell_index ++ \n        }\n        else {\n          //if next cell already exist then set it as active\n          if (typeof newCellContextData[active_cell_index+1] != \"undefined\"){\n            active_cell_index ++\n          } \n        }\n        return { 'cellContext_data' : newCellContextData , 'active_cell_index': active_cell_index };\n      });\n\n    \n\n\n}\n\nexport default InsertCellBelow;","// import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport './notebook.css';\nimport * as d3 from \"d3\";\nimport HeaderComponent from './Components/HeaderComponent';\nimport FooterComponent from './Components/FooterComponent';\nimport CellComponent from './Components/CellComponent';\nimport InsertCellBelow from './Utils/InsertCellBelow';\nimport InsertCellAbove from './Utils/InsertCellAbove';\nimport MoveCellDown from './Utils/MoveCellDown';\nimport MoveCellUp from './Utils/MoveCellUp';\nimport DeleteCell from './Utils/DeleteCell';\n\nimport * as Plotly from 'plotly.js';\n\nimport generateHash from './Utils/generateHash';\nimport { saveAs } from 'file-saver';\nimport FileExplorer from './Components/FileExplorer';\n\n\n// import run from './Comonents/lib';\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.fileInputRef = React.createRef();\n    this.queryParams = new URLSearchParams(window.location.search);\n    this.notebookHash = this.queryParams.get('notebook_hash');\n    this.stateData = null;\n    this.notebook_data = {};\n    if (this.notebookHash == undefined) {\n      this.stateData = null;\n      this.notebookHash = generateHash()\n    }\n    else {\n      this.stateData = localStorage.getItem(`stateData#${this.notebookHash}`);\n      this.notebook_data = JSON.parse(this.stateData);\n      if (this.notebook_data.notebookHash === this.notebookHash) {\n\n      }\n    }\n\n    this.state = this.stateData !== null ? JSON.parse(this.stateData) : {\n      notebook_hash: this.notebookHash,\n      notebook_name: 'untitled',\n      cellContext_data: [{\n        cellindex_value: 0,\n        output: [],\n        editorsValue: `data=[{ 'x': [1, 2, 3],\n        'y': [2, 6, 3],\n        'type': 'scatter',\n        'mode': 'lines+markers',\n        'marker': {'color': 'red'},\n      },\n      {'type': 'bar', 'x': [1, 2, 3], 'y': [2, 5, 3]}];\n\nlayout= {'width': 320, 'height': 240, 'title': 'A Fancy Plot'} `,\n        rows: 5,\n        error: '',\n        plotly_input: {}\n      },\n      {\n        cellindex_value: 1,\n        output: [],\n        editorsValue: `show_graph(data,layout);`,\n        rows: 5,\n        error: '',\n        plotly_input: {}\n      }],\n      run_all: false,\n      active_cell_index: 0,\n\n      folders: [],\n      currentFolder: null,\n    }\n\n\n\n\n    this.handleEditorChange = this.handleEditorChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.run = this.run.bind(this);\n    this.changeActiveCellIndex = this.changeActiveCellIndex.bind(this);\n    this.InsertCellBelowHandler = this.InsertCellBelowHandler.bind(this);\n    this.InsertCellAboveHandler = this.InsertCellAboveHandler.bind(this);\n    this.MoveCellDownHandler = this.MoveCellDownHandler.bind(this);\n    this.MoveCellUpHandler = this.MoveCellUpHandler.bind(this);\n    this.DeleteCellHandler = this.DeleteCellHandler.bind(this);\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.notebookNameChangeHandler = this.notebookNameChangeHandler.bind(this);\n    this.handleDownloadHTML = this.handleDownloadHTML.bind(this);\n    this.handleClearOutput = this.handleClearOutput.bind(this);\n\n  }\n\n  componentDidUpdate() {\n    try {\n      localStorage.setItem(`stateData#${this.notebookHash}`, JSON.stringify(this.state));\n    }\n    catch {\n      console.log('Error in saving state.');\n\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only update the component if the props or state have changed\n    return nextState !== this.state;\n  }\n\n\n\n  handleEditorChange = (newValue, cellindex) => {\n\n    this.setState(prevState => {\n      const newCellContextData = [...prevState.cellContext_data];\n      newCellContextData[cellindex]['editorsValue'] = newValue;\n      newCellContextData[cellindex]['rows'] = newValue.split(\"\\n\").length;\n      return { cellContext_data: newCellContextData };\n    });\n\n  }\n\n\n\n  run = (cellIndex, this_component) => {\n    let output = [];\n    let plotly_output = [];\n\n    global.show = function (data) {\n      output.push(data);\n    };\n\n    global.show_graph = (data, layout) => {\n      plotly_output.push({ 'data': data, 'layout': layout });\n    }\n\n    global.loadLibrary=(libraryUrl)=> {\n      const script = document.createElement('script');\n      script.src = libraryUrl;\n      script.async = true;\n    \n      const callback = () => {\n        console.log(`${libraryUrl} loaded`);\n      };\n    \n      script.addEventListener('load', callback);\n    \n      document.head.appendChild(script);\n    }\n\n\n    global.d3 = d3;\n    global.Plotly = Plotly;\n\n\n\n    // execute js code here\n    let code = this_component.state.cellContext_data[cellIndex].editorsValue;\n    try {\n      //execute code first \n      // Split the code on ';' or '\\n'\n      const codeLines = code.split(/;|\\n/).filter((line) => line.trim() !== '');\n      // Check if the resulting array has a length greater than 1\n      const hasMultipleLinesOrStatements = codeLines.length > 1;\n      // Check if the code contains a call to show_graph()\n      const hasShowGraphCall = /show_graph\\s*\\(/.test(code.replace(/\\s/g, ''));\n\n      if ((hasMultipleLinesOrStatements && hasShowGraphCall)) {\n        console.warn('show_graph() function call detected');\n        let cellContext = this.state.cellContext_data[cellIndex];\n        cellContext['error'] = 'must specify show_graph() function in saperate call';\n        this.setState(prevState => {\n          const newCellContextData = [...prevState.cellContext_data];\n          newCellContextData[cellIndex] = cellContext;\n          return { cellContext_data: newCellContextData };\n        });\n        return 0;\n      }\n      else {\n        global.eval(code);\n\n      }\n    }\n    catch (error) {\n      let cellContext = this.state.cellContext_data[cellIndex];\n      cellContext['error'] = error.toString();\n      this.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        newCellContextData[cellIndex] = cellContext;\n        return { cellContext_data: newCellContextData };\n      });\n      return 0;\n    }\n\n\n    if (plotly_output.length === 0) {\n      let cellContext = this_component.state.cellContext_data[cellIndex];\n      cellContext['output'] = output;\n      cellContext['plotly_input'] = plotly_output;\n      this_component.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        newCellContextData[cellIndex] = cellContext;\n        return { cellContext_data: newCellContextData };\n      });\n    }\n    else {\n\n      const data = plotly_output[0].data;\n      const layout = plotly_output[0].layout;\n      // createGraph(data, layout, container);\n      let cellContext = this_component.state.cellContext_data[cellIndex];\n      cellContext['plotly_input']['data'] = data;\n      cellContext['plotly_input']['layout'] = layout;\n      this_component.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        newCellContextData[cellIndex] = cellContext;\n        return { cellContext_data: newCellContextData };\n      }, () => { });\n\n\n    }\n\n  };\n\n\n  evalCode = (cellIndex) => {\n    try {\n      const out = this.run(cellIndex, this);\n      if (out != 0) {\n        let cellContext = this.state.cellContext_data[cellIndex];\n        cellContext['error'] = '';\n\n        this.setState(prevState => {\n          const newCellContextData = [...prevState.cellContext_data];\n          newCellContextData[cellIndex] = cellContext;\n          return { cellContext_data: newCellContextData };\n        });\n      }\n\n    } catch (error) {\n\n      let cellContext = this.state.cellContext_data[cellIndex];\n      cellContext['error'] = error.toString();\n      this.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        newCellContextData[cellIndex] = cellContext;\n        return { cellContext_data: newCellContextData };\n      });\n    }\n\n  };\n\n\n  handleKeyDown = (e) => {\n    let cellindex = this.state.active_cell_index;\n\n    if (e.ctrlKey && e.keyCode === 13) {\n      e.preventDefault();\n      this.evalCode(cellindex); //take active index\n    }\n    else if (e.shiftKey && e.keyCode === 13) {\n      e.preventDefault();\n      const cellIndex = cellindex;\n      const cellContext = {\n        cellindex_value: cellIndex,\n        output: [],\n        editorsValue: '',\n        rows: 5,\n        plotly_input: {}\n      };\n\n      this.evalCode(cellIndex);\n      InsertCellBelow({ 'this_component': this, 'force': false, 'cellIndex': cellIndex });\n\n\n    }\n\n  }\n\n  changeActiveCellIndex = (cellIndex) => {\n    this.setState({ active_cell_index: cellIndex });\n  }\n  InsertCellBelowHandler = (cellIndex) => {\n    InsertCellBelow({ 'this_component': this, 'force': true, 'cellIndex': cellIndex });\n  }\n  InsertCellAboveHandler = (cellIndex) => {\n    InsertCellAbove({ 'this_component': this, 'force': true, 'cellIndex': cellIndex });\n  }\n  MoveCellDownHandler = (cellIndex) => {\n    MoveCellDown({ 'this_component': this, 'cellIndex': cellIndex });\n  }\n  MoveCellUpHandler = (cellIndex) => {\n    MoveCellUp({ 'this_component': this, 'cellIndex': cellIndex });\n  }\n  DeleteCellHandler = (cellIndex) => {\n    DeleteCell({ 'this_component': this, 'cellIndex': cellIndex });\n  }\n\n  handleAddFolder = (newFolder) => {\n    this.setState((prevState) => ({\n      folders: [...prevState.folders, newFolder],\n    }));\n  };\n\n  handleFolderClick = (folder) => {\n    this.setState({ currentFolder: folder });\n  };\n\n  notebookNameChangeHandler = (e) => {\n    const notebook_name = e.target.value;\n    this.setState({ 'notebook_name': notebook_name })\n  }\n\n  handleSaveClick = () => {\n    const stateToSave = this.state;\n    const notebook_name = this.state.notebook_name;\n    const blob = new Blob([JSON.stringify(stateToSave)], {\n      type: 'text/plain;charset=utf-8',\n    });\n\n    saveAs(blob, `${notebook_name}.jsnb`);\n  };\n\n  handleDownloadHTML = () => {\n\n    // Clone the document element so that modifications don't affect the actual page\n    const clonedElement = document.documentElement.cloneNode(true);\n\n    // Remove the elements you want to ignore\n    const elementsToIgnore = clonedElement.querySelectorAll('.ignore-component');\n    elementsToIgnore.forEach((element) => element.remove());\n\n    // Create the blob object with the modified HTML\n    const html = clonedElement.outerHTML;\n    const blob = new Blob([html], { type: 'text/html;charset=utf-8' });\n    saveAs(blob, 'page.html');\n  };\n\n  handleClearOutput = (cellIndex = undefined) => {\n\n    if (cellIndex === undefined) {\n      this.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        newCellContextData.map((item, index) => {\n          newCellContextData[index]['output'] = [];\n          newCellContextData[index]['plotly_input'] = {};\n\n\n        });\n        return { 'cellContext_data': newCellContextData };\n      });\n    }\n    else {\n      this.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        newCellContextData[cellIndex]['output'] = [];\n        newCellContextData[cellIndex]['plotly_input'] = {};\n        return { 'cellContext_data': newCellContextData };\n      });\n    }\n\n  }\n\n  render = () => {\n\n\n    return (\n      <div className=\"App\">\n        <HeaderComponent cellIndex={this.state.active_cell_index}\n          InsertCellBelowHandler={this.InsertCellBelowHandler}\n          InsertCellAboveHandler={this.InsertCellAboveHandler}\n          MoveCellDownHandler={this.MoveCellDownHandler}\n          MoveCellUpHandler={this.MoveCellUpHandler}\n          DeleteCellHandler={this.DeleteCellHandler}\n          handleSaveClick={this.handleSaveClick}\n          notebook_name={this.state.notebook_name}\n          notebookHash={this.state.notebookHash}\n          notebookNameChangeHandler={this.notebookNameChangeHandler}\n          handleDownloadHTML={this.handleDownloadHTML}\n          handleClearOutput={this.handleClearOutput}\n        >\n          <FileExplorer notebook_name={this.state.notebook_name} notebook_hash={this.state.notebook_hash} fileInputRef={this.fileInputRef} />\n\n        </HeaderComponent>\n\n\n        <div id=\"notebook_panel\">\n          <div id=\"notebook\">\n            <div id=\"notebook-container\" className='container'>\n              {\n                this.state.cellContext_data.map((item, index) => {\n                  return <CellComponent rows={item.rows} key={index} cellindex={index} editorsValue={item.editorsValue} handleEditorChange={this.handleEditorChange} handleKeyDown={(e) => this.handleKeyDown(e)} output={this.state.cellContext_data && this.state.cellContext_data[index] ? this.state.cellContext_data[index].output : []} active_cell_index={this.state.active_cell_index} changeActiveCellIndex={this.changeActiveCellIndex} error={item.error} plotly_input={item.plotly_input} handleClearOutput={this.handleClearOutput} />\n                })\n              }\n            </div>\n          </div>\n        </div>\n\n        <FooterComponent/>\n\n      </div>\n    );\n  };\n};\n\n\nexport default App;","import React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport '../header.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faPlus, faCut, faCopy, faPaste, faArrowUp, faArrowDown, faPlay, faStop, faRepeat , faRemove} from \"@fortawesome/free-solid-svg-icons\";\n\nconst HeaderComponent = (props) => {\n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\" className=\"ignore-component\">\n                <Container>\n                    <Navbar.Brand href=\"#\" >\n                        <img\n                            alt=\"\"\n                            src={ process.env.PUBLIC_URL + \"/logo192.png\"}\n                            width=\"30\"\n                            height=\"30\"\n                            className=\"d-inline-block align-top\"\n                            \n                        />{' '}\n                        <input type='text' value={props.notebook_name} className=\"notebook_lbl\" onChange={(e)=>props.notebookNameChangeHandler(e)}></input>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <NavDropdown title=\"File\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item onClick = { (e)=> {window.open(`/`, '_blank');} }>New Notebook</NavDropdown.Item>\n                                {props.children}\n                                <NavDropdown.Item onClick={props.handleSaveClick}>Save</NavDropdown.Item>\n                            </NavDropdown>\n\n                            <NavDropdown title=\"Tools\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"\">\n                                <button className=\"btn\" title=\"insert cell below\"  onClick={(e)=>props.InsertCellBelowHandler(props.cellIndex)}>\n                                    <FontAwesomeIcon icon={faPlus} /> Insert Cell Below\n                                </button>\n                                </NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.1\">\n                                <button className=\"btn\" title=\"insert cell above\" onClick={(e)=>props.InsertCellAboveHandler(props.cellIndex)}>\n                                    <FontAwesomeIcon icon={faPlus} /> Insert Cell Above\n                                </button>\n                                </NavDropdown.Item>\n                              \n                                <NavDropdown.Item href=\"#action/3.1\">\n                                <button className=\"btn\" title=\"move selected cells up\" onClick={(e)=>props.MoveCellUpHandler(props.cellIndex)} >\n                                    <FontAwesomeIcon icon={faArrowUp} /> Move Selected Cell Up\n                                </button>\n                                </NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.1\">\n                                <button className=\"btn\" title=\"move selected cells down\" onClick={(e)=>props.MoveCellDownHandler(props.cellIndex)}>\n                                    <FontAwesomeIcon icon={faArrowDown} /> Move Selected Cells Down\n                                </button>\n                                </NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.1\">\n                                <button className=\"btn\" title=\"run cell, select below\" >\n                                    <FontAwesomeIcon icon={faPlay} /> Run Cell, Select Below\n                                </button>\n                                </NavDropdown.Item>\n                                \n                                <NavDropdown.Item href=\"#action/3.1\">\n                                <button className=\"btn\" title=\"delete cell\"  onClick={(e)=>props.DeleteCellHandler(props.cellIndex)} >\n                                    <FontAwesomeIcon icon={faRemove} /> Delete Cell\n                                </button>\n                                </NavDropdown.Item>\n\n                                <NavDropdown.Item href=\"\">\n                                <button className=\"btn\" title=\"delete cell\"  onClick={(e)=>props.handleClearOutput()} >\n                                    <FontAwesomeIcon icon={faRemove} /> Clear Output\n                                </button>\n                                </NavDropdown.Item>\n                            </NavDropdown>\n                            <NavDropdown title=\"Download As\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"#action/3.1\" onClick = {props.handleDownloadHTML} >HTML</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.1\" onClick={props.handleSaveClick} >Notebook(.jsnb)</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.1\" onClick = {(e)=> {window.print()}} >PDF</NavDropdown.Item>\n                            </NavDropdown>\n                            <NavDropdown title=\"Kernel\" id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item href=\"#action/3.1\">Restart</NavDropdown.Item>\n                            </NavDropdown>\n                            <Nav.Link href=\"#help\">Help</Nav.Link>\n                            \n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n\n            </Navbar>\n            \n        </>\n    );\n}\n\n\nexport default HeaderComponent;","import React from \"react\";\nimport '../footer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faHeart} from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst FooterComponent =() =>{\n    return <p className=\"footer\">Made with <FontAwesomeIcon icon={faHeart}  style={{'color':'#e25555'}}/> in Javascript</p>\n}\n\n\nexport default FooterComponent;","const InsertCellAbove = (props) => {\n\n  const cellIndex = props.cellIndex;\n  const cellContext = {\n    cellindex_value: cellIndex,\n    output: [],\n    editorsValue: '',\n    rows: 5,\n    plotly_input : {}\n  };\n\n  props.this_component.setState(prevState => {\n    const newCellContextData = [...prevState.cellContext_data];\n    newCellContextData.splice(cellIndex, 0, cellContext); //add output array also\n    newCellContextData.map((item, index) => {\n      newCellContextData[index]['cellindex_value'] = index;\n    });\n    return { 'cellContext_data': newCellContextData };\n  });\n\n\n\n\n}\n\nexport default InsertCellAbove;","const MoveCellDown = (props)=>{\n    const cellIndex =  props.cellIndex ;\n    if(cellIndex + 1  === props.this_component.state.cellContext_data.length){\n      console.log('cant move down');\n      return\n    }\n    \n\n    props.this_component.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        let index1 = cellIndex; // index of first element to swap\n        let index2 = cellIndex + 1 ; // index of second element to swap\n        [newCellContextData[index1] , newCellContextData[index2]]  = [newCellContextData[index2] , newCellContextData[index1]] \n        newCellContextData.map((item, index) => {\n          newCellContextData[index]['cellindex_value'] = index;\n        });\n        return { 'cellContext_data' : newCellContextData }\n    });\n\n\n\n}\n\nexport default MoveCellDown;","const MoveCellUp = (props)=>{\n    const cellIndex =  props.cellIndex ;\n    if(cellIndex === 0){\n      console.log('cant move up');\n      return\n    }\n    \n\n    props.this_component.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        let index1 = cellIndex; // index of first element to swap\n        let index2 = cellIndex-1 ; // index of second element to swap\n\n\n\n        [newCellContextData[index1] , newCellContextData[index2]]  = [newCellContextData[index2] , newCellContextData[index1]] \n        newCellContextData.map((item, index) => {\n          newCellContextData[index]['cellindex_value'] = index;\n        });\n\n        return { 'cellContext_data' : newCellContextData }\n    });\n\n\n\n}\n\nexport default MoveCellUp;","const DeleteCell = (props)=>{\n    const cellIndex =  props.cellIndex ;\n    if(0 === props.this_component.state.cellContext_data.length - 1){\n      console.log('cant delete the only cell');\n      return\n    }\n    \n\n    props.this_component.setState(prevState => {\n        const newCellContextData = [...prevState.cellContext_data];\n        newCellContextData.splice(cellIndex,1); // delete cellcontext at given index\n        \n        newCellContextData.map((item, index) => {\n          newCellContextData[index]['cellindex_value'] = index;\n        });\n\n        return { 'cellContext_data' : newCellContextData }\n    });\n\n\n\n}\n\nexport default DeleteCell;","import crypto from 'crypto';\nfunction generateHash() {\n  const hash = crypto.randomBytes(4).toString('hex');\n  return hash;\n}\n\nconsole.log(generateHash()); // Example output: \"a1b2c3d4\"\n\nexport default generateHash;\n","import React, { Component } from 'react';\nimport Plot from 'plotly.js';\nimport * as d3 from \"d3\";\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRemove } from \"@fortawesome/free-solid-svg-icons\";\n\n\nclass CellPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.plotRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const { cellindex_value, plotly_input } = this.props;\n    try {\n      Plot.newPlot(this.plotRef.current, plotly_input.data, plotly_input.layout);\n    }\n    catch (error) {\n      return;\n    }\n  }\n  componentDidMount() {\n    const { cellindex_value, plotly_input } = this.props;\n    try {\n      Plot.newPlot(this.plotRef.current, plotly_input.data, plotly_input.layout);\n    }\n    catch (error) {\n\n      return;\n    }\n  }\n\n\n  render() {\n    const { cellindex_value } = this.props;\n    return <div style={{ 'display': 'flex', 'minHeight': '400px' }}>\n\n      <div className=\"prompt output_prompt\">\n        <bdi>Out[{cellindex_value + 1}]:</bdi>\n        <Button className=\"clear_out_btn\" title=\"delete cell\" variant='danger' onClick={(e) => { this.props.handleClearOutput(cellindex_value); }}>\n          <FontAwesomeIcon icon={faRemove} />\n        </Button>\n      </div>\n\n\n      <div id={`graph_plan_${cellindex_value}`} ref={this.plotRef}>\n\n      </div>\n    </div>;\n  }\n}\n\nexport default CellPlot;","import Prism from 'prismjs';\nimport React from 'react';\nimport CodeEditor from 'react-simple-code-editor';\nimport 'prismjs/themes/prism.css';\nimport '../cellstyle.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStepForward } from '@fortawesome/free-solid-svg-icons';\nimport Alert from 'react-bootstrap/Alert';\nimport CellPlot from './CellPlot';\nimport * as d3 from \"d3\";\nimport { Button } from 'react-bootstrap';\nimport { faRemove } from \"@fortawesome/free-solid-svg-icons\";\n\n\n\nconst CellComponent = (props) => {\n  return (\n    <div className={`jupyter-cell cell ${props.cellindex === props.active_cell_index ? 'selected' : ''}`} onClick={(e) => { props.changeActiveCellIndex(props.cellindex) }}>\n      <div style={{ display: 'flex' }} >\n        <div className=\"prompt_container\">\n          <div className=\"prompt input_prompt\">\n            <bdi>In</bdi>&nbsp;[{props.cellindex + 1}]:\n          </div>\n          <div className=\"run_this_cell\" title=\"Run this cell\">\n            <FontAwesomeIcon icon={faStepForward} />\n          </div>\n        </div>\n        <CodeEditor\n          value={props.editorsValue || ''}\n          rows={props.rows || 5}\n          onValueChange={(newValue) => props.handleEditorChange(newValue, props.cellindex)}\n          highlight={code => Prism.highlight(code, Prism.languages.javascript)}\n          onKeyDown={(e) => props.handleKeyDown(e)}\n          padding={10}\n          className=\"input\"\n          style={{\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n            fontSize: 12,\n            flex: 1,\n          }}\n        />\n      </div>\n      {\n        props.error ? (<Alert key='danger' variant='danger'>\n          {props.error}\n        </Alert>) : null\n      }\n      {\n        props.output.length > 0 ? (<div className=\"output_wrapper\" >\n          <div className=\"output output_scroll\">\n            <div className=\"output_area\">\n              <div className=\"run_this_cell\"></div>\n              <div className=\"prompt output_prompt\">\n                <bdi>Out[{props.cellindex+1}]:</bdi>\n                <Button className=\"clear_out_btn\" title=\"delete cell\" variant='danger' onClick={(e) => { props.handleClearOutput(props.cellindex); }}>\n                  <FontAwesomeIcon icon={faRemove} />\n                </Button>\n              </div>\n              <div className=\"output_subarea output_html rendered_html output_text output_result\" dir=\"auto\">\n                <div>\n                  {props.output.map((value, index) => {\n                    let outputString;\n                    try {\n                      outputString = JSON.stringify(value);\n                    } catch (err) {\n                      outputString = value;\n                      outputString = \"Error: \" + err.message;\n                    }\n                    return <pre key={index}>{outputString}</pre>;\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>) : null}\n\n\n\n\n      <div>\n        {\n          props.plotly_input != undefined && Object.keys(props.plotly_input).length > 0 ? <CellPlot\n            key={props.cellindex}\n            cellindex_value={props.cellindex}\n            plotly_input={props.plotly_input}\n            handleClearOutput = {props.handleClearOutput}\n            \n          /> : null\n        }\n      </div>\n\n\n\n    </div>\n  );\n}\n\nexport default CellComponent;\n","const OpenFile = (props) => {\n    const fileReader = new FileReader();\n    fileReader.onload = (event) => {\n      const fileContents = event.target.result;\n      const stateFromFile = JSON.parse(fileContents);\n      let notebook_name = stateFromFile.notebook_name;\n      localStorage.setItem(`stateData#${props.notebook_hash}`, JSON.stringify(stateFromFile));\n      if (notebook_name.trim() === ''){\n        notebook_name = 'untitled'\n      }\n\n      window.open(`${window.location.href}${notebook_name}.jsnb/?notebook_hash=${props.notebook_hash}`, '_blank');\n    };\n    fileReader.readAsText(props.this_state.state.selectedFile);\n  };\n\n\nexport default  OpenFile;","import React, { Component } from 'react';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport OpenFile from '../Utils/OpenFile';\n\nclass FileExplorer extends Component {\n  constructor(props) {\n    super(props);\n    this.fileInputRef = props.fileInputRef ;\n    this.notebook_hash = props.notebook_hash;\n    this.state = {\n      selectedFile: null,\n    };\n  }\n\n  handleFileSelect = (event) => {\n    this.setState({ selectedFile: event.target.files[0] } , ()=>{this.handleOpenClick();});\n  };\n\n  handleOpenClick = () => {\n    if (!this.state.selectedFile) return;\n    OpenFile({ 'this_state' : this ,'notebook_hash': this.notebook_hash });\n  };\n\n  render() {\n    return (\n      <>\n        <NavDropdown.Item onClick={() => {this.fileInputRef.current.click();this.handleOpenClick();}} >Open...</NavDropdown.Item>\n        <div>\n        <input type=\"file\" accept=\".jsnb\" onChange={this.handleFileSelect} ref={this.fileInputRef} style={{display: 'none'}} />\n      </div>\n      </>\n      \n\n    );\n  }\n}\n\nexport default FileExplorer;\n"],"sourceRoot":""}