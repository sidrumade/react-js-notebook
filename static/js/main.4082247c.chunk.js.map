{"version":3,"sources":["reportWebVitals.js","index.js","Utils/InsertCellBelow.js","App.js","Components/HeaderComponent.js","Utils/InsertCellAbove.js","Utils/MoveCellDown.js","Utils/MoveCellUp.js","Utils/DeleteCell.js","Utils/generateHash.js","Components/CellPlot.js","Components/CellComponent.js","Utils/OpenFile.js","Components/FileExplorer.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","_jsx","React","StrictMode","children","App","InsertCellBelow","props","cellContext","cellindex_value","cellIndex","output","editorsValue","rows","plotly_input","this_component","setState","prevState","newCellContextData","_toConsumableArray","cellContext_data","active_cell_index","force","splice","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","handleEditorChange","newValue","cellindex","split","length","run","plotly_output","global","show","data","push","show_graph","layout","loadLibrary","libraryUrl","script","createElement","src","async","addEventListener","console","log","concat","head","appendChild","d3","Plotly","code","state","hasMultipleLinesOrStatements","filter","line","trim","hasShowGraphCall","test","replace","warn","eval","error","toString","evalCode","_assertThisInitialized","handleKeyDown","e","ctrlKey","keyCode","preventDefault","shiftKey","changeActiveCellIndex","InsertCellBelowHandler","InsertCellAboveHandler","InsertCellAbove","MoveCellDownHandler","MoveCellDown","MoveCellUpHandler","MoveCellUp","DeleteCellHandler","DeleteCell","handleAddFolder","newFolder","folders","handleFolderClick","folder","currentFolder","notebookNameChangeHandler","notebook_name","target","value","handleSaveClick","stateToSave","blob","Blob","JSON","stringify","type","saveAs","handleDownloadHTML","clonedElement","documentElement","cloneNode","querySelectorAll","forEach","element","remove","html","outerHTML","handleClearOutput","arguments","undefined","map","item","index","_jsxs","className","HeaderComponent","notebookHash","FileExplorer","notebook_hash","fileInputRef","id","CellComponent","createRef","queryParams","URLSearchParams","window","location","search","get","stateData","notebook_data","generateHash","localStorage","getItem","parse","run_all","bind","_createClass","key","setItem","this","_unused","nextProps","nextState","Component","_Fragment","Navbar","bg","expand","sticky","Container","Brand","href","alt","width","height","onChange","Toggle","Collapse","Nav","NavDropdown","title","Item","onClick","open","FontAwesomeIcon","icon","faPlus","faArrowUp","faArrowDown","faPlay","faRemove","print","Link","index1","index2","crypto","randomBytes","CellPlot","_Component","plotRef","_this$props","Plot","newPlot","current","_this$props2","_this2","style","Button","variant","ref","display","faStepForward","CodeEditor","onValueChange","highlight","Prism","languages","javascript","onKeyDown","padding","fontFamily","fontSize","flex","Alert","dir","outputString","err","message","Object","keys","OpenFile","fileReader","FileReader","onload","event","fileContents","result","stateFromFile","readAsText","this_state","selectedFile","handleFileSelect","files","handleOpenClick","click","accept"],"mappings":"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","file":"static/js/main.4082247c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n{/* The following line can be included in your src/index.js or App.js file */}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const InsertCellBelow = (props)=>{\r\n\r\n    const cellIndex =  props.cellIndex ;\r\n    const cellContext = {\r\n        cellindex_value: cellIndex+1,\r\n        output : [],\r\n        editorsValue : '',\r\n        rows : 5,\r\n        plotly_input : {}\r\n      };\r\n\r\n    props.this_component.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        let active_cell_index = prevState.active_cell_index ;\r\n\r\n        if (typeof newCellContextData[active_cell_index+1] === \"undefined\" || props.force === true ) { // if next cell not available than add empty\r\n          newCellContextData.splice(active_cell_index+1, 0, cellContext); //add output array also\r\n         active_cell_index ++ \r\n        }\r\n        else {\r\n          //if next cell already exist then set it as active\r\n          if (typeof newCellContextData[active_cell_index+1] != \"undefined\"){\r\n            active_cell_index ++\r\n          } \r\n        }\r\n        return { 'cellContext_data' : newCellContextData , 'active_cell_index': active_cell_index };\r\n      });\r\n\r\n    \r\n\r\n\r\n}\r\n\r\nexport default InsertCellBelow;","// import logo from './logo.svg';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport './notebook.css';\r\nimport * as d3 from \"d3\";\r\nimport HeaderComponent from './Components/HeaderComponent';\r\nimport CellComponent from './Components/CellComponent';\r\nimport InsertCellBelow from './Utils/InsertCellBelow';\r\nimport InsertCellAbove from './Utils/InsertCellAbove';\r\nimport MoveCellDown from './Utils/MoveCellDown';\r\nimport MoveCellUp from './Utils/MoveCellUp';\r\nimport DeleteCell from './Utils/DeleteCell';\r\n\r\nimport * as Plotly from 'plotly.js';\r\n\r\nimport generateHash from './Utils/generateHash';\r\nimport { saveAs } from 'file-saver';\r\nimport FileExplorer from './Components/FileExplorer';\r\n\r\n\r\n// import run from './Comonents/lib';\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.fileInputRef = React.createRef();\r\n    this.queryParams = new URLSearchParams(window.location.search);\r\n    this.notebookHash = this.queryParams.get('notebook_hash');\r\n    this.stateData = null;\r\n    this.notebook_data = {};\r\n    if (this.notebookHash == undefined) {\r\n      this.stateData = null;\r\n      this.notebookHash = generateHash()\r\n    }\r\n    else {\r\n      this.stateData = localStorage.getItem(`stateData#${this.notebookHash}`);\r\n      this.notebook_data = JSON.parse(this.stateData);\r\n      if (this.notebook_data.notebookHash === this.notebookHash) {\r\n\r\n      }\r\n    }\r\n\r\n    this.state = this.stateData !== null ? JSON.parse(this.stateData) : {\r\n      notebook_hash: this.notebookHash,\r\n      notebook_name: 'untitled',\r\n      cellContext_data: [{\r\n        cellindex_value: 0,\r\n        output: [],\r\n        editorsValue: `data=[{ 'x': [1, 2, 3],\r\n        'y': [2, 6, 3],\r\n        'type': 'scatter',\r\n        'mode': 'lines+markers',\r\n        'marker': {'color': 'red'},\r\n      },\r\n      {'type': 'bar', 'x': [1, 2, 3], 'y': [2, 5, 3]}];\r\n\r\nlayout= {'width': 320, 'height': 240, 'title': 'A Fancy Plot'} `,\r\n        rows: 5,\r\n        error: '',\r\n        plotly_input: {}\r\n      },\r\n      {\r\n        cellindex_value: 1,\r\n        output: [],\r\n        editorsValue: `show_graph(data,layout);`,\r\n        rows: 5,\r\n        error: '',\r\n        plotly_input: {}\r\n      }],\r\n      run_all: false,\r\n      active_cell_index: 0,\r\n\r\n      folders: [],\r\n      currentFolder: null,\r\n    }\r\n\r\n\r\n\r\n\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.run = this.run.bind(this);\r\n    this.changeActiveCellIndex = this.changeActiveCellIndex.bind(this);\r\n    this.InsertCellBelowHandler = this.InsertCellBelowHandler.bind(this);\r\n    this.InsertCellAboveHandler = this.InsertCellAboveHandler.bind(this);\r\n    this.MoveCellDownHandler = this.MoveCellDownHandler.bind(this);\r\n    this.MoveCellUpHandler = this.MoveCellUpHandler.bind(this);\r\n    this.DeleteCellHandler = this.DeleteCellHandler.bind(this);\r\n    this.handleSaveClick = this.handleSaveClick.bind(this);\r\n    this.notebookNameChangeHandler = this.notebookNameChangeHandler.bind(this);\r\n    this.handleDownloadHTML = this.handleDownloadHTML.bind(this);\r\n    this.handleClearOutput = this.handleClearOutput.bind(this);\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    try {\r\n      localStorage.setItem(`stateData#${this.notebookHash}`, JSON.stringify(this.state));\r\n    }\r\n    catch {\r\n      console.log('Error in saving state.');\r\n\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // Only update the component if the props or state have changed\r\n    return nextState !== this.state;\r\n  }\r\n\r\n\r\n\r\n  handleEditorChange = (newValue, cellindex) => {\r\n\r\n    this.setState(prevState => {\r\n      const newCellContextData = [...prevState.cellContext_data];\r\n      newCellContextData[cellindex]['editorsValue'] = newValue;\r\n      newCellContextData[cellindex]['rows'] = newValue.split(\"\\n\").length;\r\n      return { cellContext_data: newCellContextData };\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  run = (cellIndex, this_component) => {\r\n    let output = [];\r\n    let plotly_output = [];\r\n\r\n    global.show = function (data) {\r\n      output.push(data);\r\n    };\r\n\r\n    global.show_graph = (data, layout) => {\r\n      plotly_output.push({ 'data': data, 'layout': layout });\r\n    }\r\n\r\n    global.loadLibrary=(libraryUrl)=> {\r\n      const script = document.createElement('script');\r\n      script.src = libraryUrl;\r\n      script.async = true;\r\n    \r\n      const callback = () => {\r\n        console.log(`${libraryUrl} loaded`);\r\n      };\r\n    \r\n      script.addEventListener('load', callback);\r\n    \r\n      document.head.appendChild(script);\r\n    }\r\n\r\n\r\n    global.d3 = d3;\r\n    global.Plotly = Plotly;\r\n\r\n\r\n\r\n    // execute js code here\r\n    let code = this_component.state.cellContext_data[cellIndex].editorsValue;\r\n    try {\r\n      //execute code first \r\n      // Split the code on ';' or '\\n'\r\n      const codeLines = code.split(/;|\\n/).filter((line) => line.trim() !== '');\r\n      // Check if the resulting array has a length greater than 1\r\n      const hasMultipleLinesOrStatements = codeLines.length > 1;\r\n      // Check if the code contains a call to show_graph()\r\n      const hasShowGraphCall = /show_graph\\s*\\(/.test(code.replace(/\\s/g, ''));\r\n\r\n      if ((hasMultipleLinesOrStatements && hasShowGraphCall)) {\r\n        console.warn('show_graph() function call detected');\r\n        let cellContext = this.state.cellContext_data[cellIndex];\r\n        cellContext['error'] = 'must specify show_graph() function in saperate call';\r\n        this.setState(prevState => {\r\n          const newCellContextData = [...prevState.cellContext_data];\r\n          newCellContextData[cellIndex] = cellContext;\r\n          return { cellContext_data: newCellContextData };\r\n        });\r\n        return 0;\r\n      }\r\n      else {\r\n        global.eval(code);\r\n\r\n      }\r\n    }\r\n    catch (error) {\r\n      let cellContext = this.state.cellContext_data[cellIndex];\r\n      cellContext['error'] = error.toString();\r\n      this.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        newCellContextData[cellIndex] = cellContext;\r\n        return { cellContext_data: newCellContextData };\r\n      });\r\n      return 0;\r\n    }\r\n\r\n\r\n    if (plotly_output.length === 0) {\r\n      let cellContext = this_component.state.cellContext_data[cellIndex];\r\n      cellContext['output'] = output;\r\n      cellContext['plotly_input'] = plotly_output;\r\n      this_component.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        newCellContextData[cellIndex] = cellContext;\r\n        return { cellContext_data: newCellContextData };\r\n      });\r\n    }\r\n    else {\r\n\r\n      const data = plotly_output[0].data;\r\n      const layout = plotly_output[0].layout;\r\n      // createGraph(data, layout, container);\r\n      let cellContext = this_component.state.cellContext_data[cellIndex];\r\n      cellContext['plotly_input']['data'] = data;\r\n      cellContext['plotly_input']['layout'] = layout;\r\n      this_component.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        newCellContextData[cellIndex] = cellContext;\r\n        return { cellContext_data: newCellContextData };\r\n      }, () => { });\r\n\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  evalCode = (cellIndex) => {\r\n    try {\r\n      const out = this.run(cellIndex, this);\r\n      if (out != 0) {\r\n        let cellContext = this.state.cellContext_data[cellIndex];\r\n        cellContext['error'] = '';\r\n\r\n        this.setState(prevState => {\r\n          const newCellContextData = [...prevState.cellContext_data];\r\n          newCellContextData[cellIndex] = cellContext;\r\n          return { cellContext_data: newCellContextData };\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n\r\n      let cellContext = this.state.cellContext_data[cellIndex];\r\n      cellContext['error'] = error.toString();\r\n      this.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        newCellContextData[cellIndex] = cellContext;\r\n        return { cellContext_data: newCellContextData };\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  handleKeyDown = (e) => {\r\n    let cellindex = this.state.active_cell_index;\r\n\r\n    if (e.ctrlKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.evalCode(cellindex); //take active index\r\n    }\r\n    else if (e.shiftKey && e.keyCode === 13) {\r\n      e.preventDefault();\r\n      const cellIndex = cellindex;\r\n      const cellContext = {\r\n        cellindex_value: cellIndex,\r\n        output: [],\r\n        editorsValue: '',\r\n        rows: 5,\r\n        plotly_input: {}\r\n      };\r\n\r\n      this.evalCode(cellIndex);\r\n      InsertCellBelow({ 'this_component': this, 'force': false, 'cellIndex': cellIndex });\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  changeActiveCellIndex = (cellIndex) => {\r\n    this.setState({ active_cell_index: cellIndex });\r\n  }\r\n  InsertCellBelowHandler = (cellIndex) => {\r\n    InsertCellBelow({ 'this_component': this, 'force': true, 'cellIndex': cellIndex });\r\n  }\r\n  InsertCellAboveHandler = (cellIndex) => {\r\n    InsertCellAbove({ 'this_component': this, 'force': true, 'cellIndex': cellIndex });\r\n  }\r\n  MoveCellDownHandler = (cellIndex) => {\r\n    MoveCellDown({ 'this_component': this, 'cellIndex': cellIndex });\r\n  }\r\n  MoveCellUpHandler = (cellIndex) => {\r\n    MoveCellUp({ 'this_component': this, 'cellIndex': cellIndex });\r\n  }\r\n  DeleteCellHandler = (cellIndex) => {\r\n    DeleteCell({ 'this_component': this, 'cellIndex': cellIndex });\r\n  }\r\n\r\n  handleAddFolder = (newFolder) => {\r\n    this.setState((prevState) => ({\r\n      folders: [...prevState.folders, newFolder],\r\n    }));\r\n  };\r\n\r\n  handleFolderClick = (folder) => {\r\n    this.setState({ currentFolder: folder });\r\n  };\r\n\r\n  notebookNameChangeHandler = (e) => {\r\n    const notebook_name = e.target.value;\r\n    this.setState({ 'notebook_name': notebook_name })\r\n  }\r\n\r\n  handleSaveClick = () => {\r\n    const stateToSave = this.state;\r\n    const notebook_name = this.state.notebook_name;\r\n    const blob = new Blob([JSON.stringify(stateToSave)], {\r\n      type: 'text/plain;charset=utf-8',\r\n    });\r\n\r\n    saveAs(blob, `${notebook_name}.jsnb`);\r\n  };\r\n\r\n  handleDownloadHTML = () => {\r\n\r\n    // Clone the document element so that modifications don't affect the actual page\r\n    const clonedElement = document.documentElement.cloneNode(true);\r\n\r\n    // Remove the elements you want to ignore\r\n    const elementsToIgnore = clonedElement.querySelectorAll('.ignore-component');\r\n    elementsToIgnore.forEach((element) => element.remove());\r\n\r\n    // Create the blob object with the modified HTML\r\n    const html = clonedElement.outerHTML;\r\n    const blob = new Blob([html], { type: 'text/html;charset=utf-8' });\r\n    saveAs(blob, 'page.html');\r\n  };\r\n\r\n  handleClearOutput = (cellIndex = undefined) => {\r\n\r\n    if (cellIndex === undefined) {\r\n      this.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        newCellContextData.map((item, index) => {\r\n          newCellContextData[index]['output'] = [];\r\n          newCellContextData[index]['plotly_input'] = {};\r\n\r\n\r\n        });\r\n        return { 'cellContext_data': newCellContextData };\r\n      });\r\n    }\r\n    else {\r\n      this.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        newCellContextData[cellIndex]['output'] = [];\r\n        newCellContextData[cellIndex]['plotly_input'] = {};\r\n        return { 'cellContext_data': newCellContextData };\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  render = () => {\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <HeaderComponent cellIndex={this.state.active_cell_index}\r\n          InsertCellBelowHandler={this.InsertCellBelowHandler}\r\n          InsertCellAboveHandler={this.InsertCellAboveHandler}\r\n          MoveCellDownHandler={this.MoveCellDownHandler}\r\n          MoveCellUpHandler={this.MoveCellUpHandler}\r\n          DeleteCellHandler={this.DeleteCellHandler}\r\n          handleSaveClick={this.handleSaveClick}\r\n          notebook_name={this.state.notebook_name}\r\n          notebookHash={this.state.notebookHash}\r\n          notebookNameChangeHandler={this.notebookNameChangeHandler}\r\n          handleDownloadHTML={this.handleDownloadHTML}\r\n          handleClearOutput={this.handleClearOutput}\r\n        >\r\n          <FileExplorer notebook_name={this.state.notebook_name} notebook_hash={this.state.notebook_hash} fileInputRef={this.fileInputRef} />\r\n\r\n        </HeaderComponent>\r\n\r\n\r\n        <div id=\"notebook_panel\">\r\n          <div id=\"notebook\">\r\n            <div id=\"notebook-container\" className='container'>\r\n              {\r\n                this.state.cellContext_data.map((item, index) => {\r\n                  return <CellComponent rows={item.rows} key={index} cellindex={index} editorsValue={item.editorsValue} handleEditorChange={this.handleEditorChange} handleKeyDown={(e) => this.handleKeyDown(e)} output={this.state.cellContext_data && this.state.cellContext_data[index] ? this.state.cellContext_data[index].output : []} active_cell_index={this.state.active_cell_index} changeActiveCellIndex={this.changeActiveCellIndex} error={item.error} plotly_input={item.plotly_input} handleClearOutput={this.handleClearOutput} />\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n\r\nexport default App;","import React from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport '../header.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faPlus, faCut, faCopy, faPaste, faArrowUp, faArrowDown, faPlay, faStop, faRepeat , faRemove} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HeaderComponent = (props) => {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\" className=\"ignore-component\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"#\" >\r\n                        <img\r\n                            alt=\"\"\r\n                            src=\"/logo192.png\"\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                            \r\n                        />{' '}\r\n                        <input type='text' value={props.notebook_name} className=\"notebook_lbl\" onChange={(e)=>props.notebookNameChangeHandler(e)}></input>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <NavDropdown title=\"File\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item onClick = { (e)=> {window.open(`/`, '_blank');} }>New Notebook</NavDropdown.Item>\r\n                                {props.children}\r\n                                <NavDropdown.Item onClick={props.handleSaveClick}>Save</NavDropdown.Item>\r\n                            </NavDropdown>\r\n\r\n                            <NavDropdown title=\"Tools\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"\">\r\n                                <button className=\"btn\" title=\"insert cell below\"  onClick={(e)=>props.InsertCellBelowHandler(props.cellIndex)}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> Insert Cell Below\r\n                                </button>\r\n                                </NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.1\">\r\n                                <button className=\"btn\" title=\"insert cell above\" onClick={(e)=>props.InsertCellAboveHandler(props.cellIndex)}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> Insert Cell Above\r\n                                </button>\r\n                                </NavDropdown.Item>\r\n                              \r\n                                <NavDropdown.Item href=\"#action/3.1\">\r\n                                <button className=\"btn\" title=\"move selected cells up\" onClick={(e)=>props.MoveCellUpHandler(props.cellIndex)} >\r\n                                    <FontAwesomeIcon icon={faArrowUp} /> Move Selected Cell Up\r\n                                </button>\r\n                                </NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.1\">\r\n                                <button className=\"btn\" title=\"move selected cells down\" onClick={(e)=>props.MoveCellDownHandler(props.cellIndex)}>\r\n                                    <FontAwesomeIcon icon={faArrowDown} /> Move Selected Cells Down\r\n                                </button>\r\n                                </NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.1\">\r\n                                <button className=\"btn\" title=\"run cell, select below\" >\r\n                                    <FontAwesomeIcon icon={faPlay} /> Run Cell, Select Below\r\n                                </button>\r\n                                </NavDropdown.Item>\r\n                                \r\n                                <NavDropdown.Item href=\"#action/3.1\">\r\n                                <button className=\"btn\" title=\"delete cell\"  onClick={(e)=>props.DeleteCellHandler(props.cellIndex)} >\r\n                                    <FontAwesomeIcon icon={faRemove} /> Delete Cell\r\n                                </button>\r\n                                </NavDropdown.Item>\r\n\r\n                                <NavDropdown.Item href=\"\">\r\n                                <button className=\"btn\" title=\"delete cell\"  onClick={(e)=>props.handleClearOutput()} >\r\n                                    <FontAwesomeIcon icon={faRemove} /> Clear Output\r\n                                </button>\r\n                                </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Download As\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\" onClick = {props.handleDownloadHTML} >HTML</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.1\" onClick={props.handleSaveClick} >Notebook(.jsnb)</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.1\" onClick = {(e)=> {window.print()}} >PDF</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"Kernel\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#action/3.1\">Restart</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link href=\"#help\">Help</Nav.Link>\r\n                            \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n\r\n            </Navbar>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default HeaderComponent;","const InsertCellAbove = (props) => {\r\n\r\n  const cellIndex = props.cellIndex;\r\n  const cellContext = {\r\n    cellindex_value: cellIndex,\r\n    output: [],\r\n    editorsValue: '',\r\n    rows: 5,\r\n    plotly_input : {}\r\n  };\r\n\r\n  props.this_component.setState(prevState => {\r\n    const newCellContextData = [...prevState.cellContext_data];\r\n    newCellContextData.splice(cellIndex, 0, cellContext); //add output array also\r\n    newCellContextData.map((item, index) => {\r\n      newCellContextData[index]['cellindex_value'] = index;\r\n    });\r\n    return { 'cellContext_data': newCellContextData };\r\n  });\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default InsertCellAbove;","const MoveCellDown = (props)=>{\r\n    const cellIndex =  props.cellIndex ;\r\n    if(cellIndex + 1  === props.this_component.state.cellContext_data.length){\r\n      console.log('cant move down');\r\n      return\r\n    }\r\n    \r\n\r\n    props.this_component.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        let index1 = cellIndex; // index of first element to swap\r\n        let index2 = cellIndex + 1 ; // index of second element to swap\r\n        [newCellContextData[index1] , newCellContextData[index2]]  = [newCellContextData[index2] , newCellContextData[index1]] \r\n        newCellContextData.map((item, index) => {\r\n          newCellContextData[index]['cellindex_value'] = index;\r\n        });\r\n        return { 'cellContext_data' : newCellContextData }\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nexport default MoveCellDown;","const MoveCellUp = (props)=>{\r\n    const cellIndex =  props.cellIndex ;\r\n    if(cellIndex === 0){\r\n      console.log('cant move up');\r\n      return\r\n    }\r\n    \r\n\r\n    props.this_component.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        let index1 = cellIndex; // index of first element to swap\r\n        let index2 = cellIndex-1 ; // index of second element to swap\r\n\r\n\r\n\r\n        [newCellContextData[index1] , newCellContextData[index2]]  = [newCellContextData[index2] , newCellContextData[index1]] \r\n        newCellContextData.map((item, index) => {\r\n          newCellContextData[index]['cellindex_value'] = index;\r\n        });\r\n\r\n        return { 'cellContext_data' : newCellContextData }\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nexport default MoveCellUp;","const DeleteCell = (props)=>{\r\n    const cellIndex =  props.cellIndex ;\r\n    if(0 === props.this_component.state.cellContext_data.length - 1){\r\n      console.log('cant delete the only cell');\r\n      return\r\n    }\r\n    \r\n\r\n    props.this_component.setState(prevState => {\r\n        const newCellContextData = [...prevState.cellContext_data];\r\n        newCellContextData.splice(cellIndex,1); // delete cellcontext at given index\r\n        \r\n        newCellContextData.map((item, index) => {\r\n          newCellContextData[index]['cellindex_value'] = index;\r\n        });\r\n\r\n        return { 'cellContext_data' : newCellContextData }\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nexport default DeleteCell;","import crypto from 'crypto';\r\nfunction generateHash() {\r\n  const hash = crypto.randomBytes(4).toString('hex');\r\n  return hash;\r\n}\r\n\r\nconsole.log(generateHash()); // Example output: \"a1b2c3d4\"\r\n\r\nexport default generateHash;\r\n","import React, { Component } from 'react';\r\nimport Plot from 'plotly.js';\r\nimport * as d3 from \"d3\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRemove } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass CellPlot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.plotRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { cellindex_value, plotly_input } = this.props;\r\n    try {\r\n      Plot.newPlot(this.plotRef.current, plotly_input.data, plotly_input.layout);\r\n    }\r\n    catch (error) {\r\n      return;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { cellindex_value, plotly_input } = this.props;\r\n    try {\r\n      Plot.newPlot(this.plotRef.current, plotly_input.data, plotly_input.layout);\r\n    }\r\n    catch (error) {\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { cellindex_value } = this.props;\r\n    return <div style={{ 'display': 'flex', 'minHeight': '400px' }}>\r\n\r\n      <div className=\"prompt output_prompt\">\r\n        <bdi>Out[{cellindex_value + 1}]:</bdi>\r\n        <Button className=\"clear_out_btn\" title=\"delete cell\" variant='danger' onClick={(e) => { this.props.handleClearOutput(cellindex_value); }}>\r\n          <FontAwesomeIcon icon={faRemove} />\r\n        </Button>\r\n      </div>\r\n\r\n\r\n      <div id={`graph_plan_${cellindex_value}`} ref={this.plotRef}>\r\n\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default CellPlot;","import Prism from 'prismjs';\r\nimport React from 'react';\r\nimport CodeEditor from 'react-simple-code-editor';\r\nimport 'prismjs/themes/prism.css';\r\nimport '../cellstyle.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStepForward } from '@fortawesome/free-solid-svg-icons';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport CellPlot from './CellPlot';\r\nimport * as d3 from \"d3\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { faRemove } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nconst CellComponent = (props) => {\r\n  return (\r\n    <div className={`jupyter-cell cell ${props.cellindex === props.active_cell_index ? 'selected' : ''}`} onClick={(e) => { props.changeActiveCellIndex(props.cellindex) }}>\r\n      <div style={{ display: 'flex' }} >\r\n        <div className=\"prompt_container\">\r\n          <div className=\"prompt input_prompt\">\r\n            <bdi>In</bdi>&nbsp;[{props.cellindex + 1}]:\r\n          </div>\r\n          <div className=\"run_this_cell\" title=\"Run this cell\">\r\n            <FontAwesomeIcon icon={faStepForward} />\r\n          </div>\r\n        </div>\r\n        <CodeEditor\r\n          value={props.editorsValue || ''}\r\n          rows={props.rows || 5}\r\n          onValueChange={(newValue) => props.handleEditorChange(newValue, props.cellindex)}\r\n          highlight={code => Prism.highlight(code, Prism.languages.javascript)}\r\n          onKeyDown={(e) => props.handleKeyDown(e)}\r\n          padding={10}\r\n          className=\"input\"\r\n          style={{\r\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n            fontSize: 12,\r\n            flex: 1,\r\n          }}\r\n        />\r\n      </div>\r\n      {\r\n        props.error ? (<Alert key='danger' variant='danger'>\r\n          {props.error}\r\n        </Alert>) : null\r\n      }\r\n      {\r\n        props.output.length > 0 ? (<div className=\"output_wrapper\" >\r\n          <div className=\"output output_scroll\">\r\n            <div className=\"output_area\">\r\n              <div className=\"run_this_cell\"></div>\r\n              <div className=\"prompt output_prompt\">\r\n                <bdi>Out[{props.cellindex+1}]:</bdi>\r\n                <Button className=\"clear_out_btn\" title=\"delete cell\" variant='danger' onClick={(e) => { props.handleClearOutput(props.cellindex); }}>\r\n                  <FontAwesomeIcon icon={faRemove} />\r\n                </Button>\r\n              </div>\r\n              <div className=\"output_subarea output_html rendered_html output_text output_result\" dir=\"auto\">\r\n                <div>\r\n                  {props.output.map((value, index) => {\r\n                    let outputString;\r\n                    try {\r\n                      outputString = JSON.stringify(value);\r\n                    } catch (err) {\r\n                      outputString = value;\r\n                      outputString = \"Error: \" + err.message;\r\n                    }\r\n                    return <pre key={index}>{outputString}</pre>;\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>) : null}\r\n\r\n\r\n\r\n\r\n      <div>\r\n        {\r\n          props.plotly_input != undefined && Object.keys(props.plotly_input).length > 0 ? <CellPlot\r\n            key={props.cellindex}\r\n            cellindex_value={props.cellindex}\r\n            plotly_input={props.plotly_input}\r\n            handleClearOutput = {props.handleClearOutput}\r\n            \r\n          /> : null\r\n        }\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CellComponent;\r\n","const OpenFile = (props) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = (event) => {\r\n      const fileContents = event.target.result;\r\n      const stateFromFile = JSON.parse(fileContents);\r\n      let notebook_name = stateFromFile.notebook_name;\r\n      localStorage.setItem(`stateData#${props.notebook_hash}`, JSON.stringify(stateFromFile));\r\n      if (notebook_name.trim() === ''){\r\n        notebook_name = 'untitled'\r\n      }\r\n      window.open(`/${notebook_name}.jsnb/?notebook_hash=${props.notebook_hash}`, '_blank');\r\n    };\r\n    fileReader.readAsText(props.this_state.state.selectedFile);\r\n  };\r\n\r\n\r\nexport default  OpenFile;","import React, { Component } from 'react';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport OpenFile from '../Utils/OpenFile';\r\n\r\nclass FileExplorer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fileInputRef = props.fileInputRef ;\r\n    this.notebook_hash = props.notebook_hash;\r\n    this.state = {\r\n      selectedFile: null,\r\n    };\r\n  }\r\n\r\n  handleFileSelect = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] } , ()=>{this.handleOpenClick();});\r\n  };\r\n\r\n  handleOpenClick = () => {\r\n    if (!this.state.selectedFile) return;\r\n    OpenFile({ 'this_state' : this ,'notebook_hash': this.notebook_hash });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavDropdown.Item onClick={() => {this.fileInputRef.current.click();this.handleOpenClick();}} >Open...</NavDropdown.Item>\r\n        <div>\r\n        <input type=\"file\" accept=\".jsnb\" onChange={this.handleFileSelect} ref={this.fileInputRef} style={{display: 'none'}} />\r\n      </div>\r\n      </>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileExplorer;\r\n"],"sourceRoot":""}